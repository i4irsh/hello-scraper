version: '3.7'

services:
  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: 'unless-stopped'
    networks:
      - backend
  server:
    build:
      context: ./
      target: production-build-stage
      dockerfile: Dockerfile
    container_name: server
    ports:
      - '3000:3000'
    environment:    
      REDIS_URL: redis:6379
      CHOKIDAR_USEPOLLING: 'true'
      CHOKIDAR_INTERVAL: 1000
      ORIGIN: 'http://localhost:5000'
    volumes:
      - ./:/app
      - /app/node_modules
    restart: 'unless-stopped'
    networks:
      - backend
    links:
      - mysql
    depends_on:
      - mysql
  mysql:
    image: mysql:5.7
    container_name: mysql
    environment:
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: test
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
    networks:
      - backend      
  frontend:
    build: ./client    
    ports:
    - "5000:3000"
    depends_on:
    - server
    - redis

  redis:
    image: redis
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379

  redis-commander:
    container_name: redis-commander
    image: rediscommander/redis-commander
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

networks:
  backend:
    driver: bridge

volumes: 
  db:

# volumes:
#   data:
#     driver: local
